{
    "contents" : "#'Read in BBS Relative Abundance Shapefile\n#'\n#'@param \\code{SpeciesCode} = x - vector of species alpha codes,\n#'@param \\code{MakeRaster} defaults = \\code{TRUE}\n#'@param \\code{RelAbun} default = \\code{FALSE}\n#'@param \\code{SnapToH2} default = \\code{FALSE}\n#'@return a shapefile or raster with relative abundance information; \n#'if more than one alpha code is supplied returns a list of shapfiles named\n#'with the alpha code\n#'@usage \\code{BBSmap(SpeciesCode=\"Species Alpha Code\", MakeRaster=TRUE,RelAbun=FALSE,res=10000,SnapToH2=FALSE)}\n#'@export\nBBSmap<-function(SpeciesCode,MakeRaster=TRUE,RelAbun=FALSE,SnapToH2=FALSE){\n  data(Birds)\n  x<-SpeciesCode\n  y<-destfile<-exdir<-rep(NA,length(x))\n  WGS84<-\"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\"\n  Lambert<-\"+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0\"\n  if(SnapToH2==TRUE){\n          print(\"Reading in Mean Annual Deuterium Raster\")\n          MAD<-raster::raster(system.file(\"extdata\",\"mad_northam.txt\",package=\"BBSshapefile\"))\n          #MAD<-suppressWarnings(raster::projectRaster(MAD,crs=Lambert))\n          }\n  shapes<-extentShape<-rastShape<-rastEmpty<-RelAbundance<-snapRast<-vector('list',length(x))\n  for(i in 1:length(x)){\n    if(x[i] %in% Birds[,4]==FALSE) print(\"Alpha Code not in list\")\n    y[i]<-sprintf(\"%05d\",Birds[grep(Birds[,4],pattern=x[i]),2])\n    # Download the shapefile to working directory with name CODE.zip#\n    destfile[i]<-paste(getwd(),\"/\",x[i],\".zip\",sep=\"\")\n    download.file(paste(\"http://www.mbr-pwrc.usgs.gov/bbs/ra12/ra\",y[i],\".zip\",sep=\"\"),destfile=destfile[i],mode=\"wb\")\n    exdir[i]<-paste(getwd(),\"/\",x[i],\"_unzip\",sep=\"\")\n    unzip(paste(x[i],\".zip\",sep=\"\"),exdir=exdir[i])\n    shapes[[i]]<-raster::shapefile(paste(exdir[i],\"/\",\"ra\",y[i],\".shp\",sep=\"\"))\n    shapes[[i]]<-sp::spTransform(shapes[[i]],CRS(WGS84))\n    names(shapes)<-c(x)\n    if(MakeRaster==FALSE){break} else {\n    extentShape[[i]]<-raster::extent(shapes[[i]])\n    rastEmpty[[i]]<-raster::raster(xmn=extentShape[[i]][1],\n                                   xmx=extentShape[[i]][2],\n                                   ymn=extentShape[[i]][3],\n                                   ymx=extentShape[[i]][4], \n                                   crs=(WGS84),\n                                   resolution=c(0.333333,0.333333)) #10km res\n    print(paste(\"Creating Raster for\",x[i],sep=\" \"))\n    rastShape[[i]]<-raster::rasterize(shapes[[i]],rastEmpty[[i]],shapes[[i]]$RASTAT)\n    } \n    names(rastShape)<-c(x)\n    if(RelAbun==FALSE){break} else {\n      print(paste(\"Creating Probability surface for\",x[i],sep=\" \"))\n      RelAbundance[[i]]<-raster::calc(rastShape[[i]],fun=function(x){x/raster::cellStats(rastShape[[i]],sum)})\n    names(RelAbundance)<-c(x)\n      }\n    if(SnapToH2==FALSE){break} else{\n      print(paste(\"Snapping probability surface of\",x[i],\"to deuterium map\",sep=\" \"))\n      #snapRast[[i]]<-raster::mask(MAD,rastShape[[i]])\n      snapRast[[i]]<-raster::resample(RelAbundance[[i]],MAD,method=\"bilinear\",res=c(0.333333,0.333333))\n      snapRast[[i]]<-extend(snapRast[[i]],MAD)\n      snapRast[[i]]<-mask(snapRast[[i]],MAD)\n      names(snapRast)<-c(x)\n      }\n      }\n  if(MakeRaster==FALSE){\n         if(length(shapes)==1){ return(shapes[[1]])}\n            else {return(shapes)}\n     }\n  if(MakeRaster==TRUE & RelAbun==FALSE & SnapToH2==FALSE){\n    if(length(rastShape)==1){ return(rastShape[[1]])}\n    else {return(rastShape)}\n  }\n  if(MakeRaster==TRUE & RelAbun==TRUE & SnapToH2==FALSE){\n    if(length(RelAbundance)==1){ return(RelAbundance[[1]])}\n    else {return(RelAbundance)}\n  }\n  if(MakeRaster==TRUE & RelAbun==TRUE & SnapToH2==TRUE){\n    if(length(snapRast)==1){ return(snapRast[[1]])}\n    else {return(snapRast)}\n  }\n}\n\n\n",
    "created" : 1442757909758.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3381588183",
    "id" : "9A1C6765",
    "lastKnownWriteTime" : 1442760864,
    "path" : "G:/Google_Drive/BBS_shapefile/R/BBSmap.R",
    "project_path" : "R/BBSmap.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}